-----------CD_MISSING_QTY-----------
CREATE OR REPLACE TABLE COLES.LIQUORLAND.CD_MISSING_QTY
AS(
WITH TEMP_CD_MAP_QTY
AS
(SELECT STATE,
BRANDID,
DESCRIPTION,
STARTDATE,
ENDDATE,
REBATENO,
CLAIMREFID,
REVERSALCLAIMREFID,
ITEMID,
SUM(CLM_QTY) CLM_QTY,
SUM(CLM_VAL) CLM_VAL,
CD_TYPE,
REBATE_ENTITLEMENT_NUM ,
MULTIPLIER_NUM
FROM
(
SELECT STATE,
BRANDID,
DESCRIPTION,
STARTDATE,
ENDDATE,
REBATENO,
CLAIMREFID,
REVERSALCLAIMREFID,
ITEMID,
CLM_QTY,
CLM_VAL,
CD_TYPE,
REBATE_ENTITLEMENT_NUM,
MULTIPLIER_NUM
FROM COLES.LIQUORLAND.CD_FULL
WHERE (REVERSALCLAIMREFID IS NULL OR TRIM(REVERSALCLAIMREFID) = '')
AND CLAIMREFID IS NOT NULL AND TRIM(CLAIMREFID) <> ''
ORDER BY REBATENO) T
GROUP BY
STATE,
BRANDID,
DESCRIPTION,
STARTDATE,
ENDDATE,
REBATENO,
CLAIMREFID,
REVERSALCLAIMREFID,
ITEMID,
CD_TYPE,
REBATE_ENTITLEMENT_NUM ,
MULTIPLIER_NUM
ORDER BY REBATENO),
---
TEMP_CD_CHECKQTY_DETAILS_1
AS
(SELECT CD.STATE, CD.BRANDID, CD.DESCRIPTION, CD.STARTDATE, CD.ENDDATE, CD.REBATENO,
CD.CLAIMREFID, CD.REVERSALCLAIMREFID, CD.CD_TYPE,
CD.ITEMID, CD.MULTIPLIER_NUM, CD.REBATE_ENTITLEMENT_NUM, CD.CLM_VAL AS CLM_VAL,
ROUND(AVG(AGV_SALE_PRICE),2) AGV_SALE_PRICE,
ROUND(AVG(ITEMPRICE_INC),2) AVG_ITEMPRICE_INC,
CD.CLM_QTY/CD.MULTIPLIER_NUM AS CLM_QTY, SUM(S.ITEMQUANTITY) SLS_QTY
FROM TEMP_CD_MAP_QTY CD
LEFT JOIN COLES.LIQUORLAND.SLS_QTY S
--COLES.LIQUORLAND.LIQUOR_20210101_20221031_SLS_QTY S
ON TRIM(S.BRANDID) = TRIM(CD.BRANDID)
AND TRIM(S.ITEMIDSKU) = TRIM(CD.ITEMID)
AND TRIM(S.STATE) = TRIM(CD.STATE)
AND S.UOM_QTY = CD.MULTIPLIER_NUM
AND S.DATE1::DATE BETWEEN CD.STARTDATE AND CD.ENDDATE
GROUP BY
CD.STATE, CD.BRANDID, CD.DESCRIPTION, CD.STARTDATE, CD.ENDDATE, CD.REBATENO, CD.CLAIMREFID, CD.REVERSALCLAIMREFID, CD.CD_TYPE,
CD.ITEMID, CD.MULTIPLIER_NUM, CD.REBATE_ENTITLEMENT_NUM, CD.CLM_VAL, CD.CLM_QTY
ORDER BY CD_TYPE, STARTDATE, ENDDATE, ITEMID, DESCRIPTION, BRANDID, STATE, REBATENO, REBATE_ENTITLEMENT_NUM, MULTIPLIER_NUM),
TEMP_CD_CHECKQTY_DETAILS_2
AS
(SELECT CD.*, ROUND(AVG(P.PH_VAL),2) PH_VAL,
CASE WHEN ROUND(AVG(AGV_SALE_PRICE),2) < ROUND(AVG(P.PH_VAL/1.1),2) THEN SLS_QTY ELSE 0 END AS PROMO_QTY
FROM TEMP_CD_CHECKQTY_DETAILS_1 CD
LEFT JOIN COLES.LIQUORLAND.PRICE_HISTORY_CD_MAP P
ON TRIM(CD.STATE) = TRIM(P.STATE)
AND TRIM(CD.BRANDID) = TRIM(P.BRANDID)
AND TRIM(CD.ITEMID) = TRIM(P.ITEMIDSKU)
AND CD.STARTDATE BETWEEN P.FROMDATE AND P.TODATE
AND CD.ENDDATE BETWEEN P.FROMDATE AND P.TODATE
AND CD.MULTIPLIER_NUM = P.UOM_QTY
GROUP BY
CD.STATE, CD.BRANDID, CD.DESCRIPTION, CD.STARTDATE, CD.ENDDATE, CD.REBATENO, CD.CLAIMREFID, CD.REVERSALCLAIMREFID, CD.CD_TYPE,
CD.ITEMID, CD.MULTIPLIER_NUM, CD.REBATE_ENTITLEMENT_NUM, CD.CLM_VAL, CD.CLM_QTY, CD.AGV_SALE_PRICE,
CD.AVG_ITEMPRICE_INC,
CD.SLS_QTY),
---
TEMP_CD_CHECKQTY_CLM_TTL_DETAILS
AS
(SELECT STATE,BRANDID,DESCRIPTION,STARTDATE,ENDDATE,CD_TYPE,ITEMID,MULTIPLIER_NUM,REBATE_ENTITLEMENT_NUM,PH_VAL,AGV_SALE_PRICE,AVG_ITEMPRICE_INC,SLS_QTY,PROMO_QTY,
SUM(CLM_QTY) AS CLM_QTY_TTL
FROM TEMP_CD_CHECKQTY_DETAILS_2
GROUP BY STATE,BRANDID,DESCRIPTION,STARTDATE,ENDDATE,CD_TYPE,ITEMID,MULTIPLIER_NUM,REBATE_ENTITLEMENT_NUM,PH_VAL,AGV_SALE_PRICE,AVG_ITEMPRICE_INC,SLS_QTY,PROMO_QTY),
---
TEMP_CD_CHECKQTY_FULL
AS
(SELECT CD.*, CDQTY.CLM_QTY_TTL, (CD.SLS_QTY - CLM_QTY_TTL) AS VAR_QTY_SLS, (CD.PROMO_QTY - CLM_QTY_TTL) AS VAR_QTY_PROMO,
(CD.SLS_QTY - CLM_QTY_TTL)*CD.REBATE_ENTITLEMENT_NUM AS VAR_AMT_SLS,
(CD.PROMO_QTY - CLM_QTY_TTL)*CD.REBATE_ENTITLEMENT_NUM AS VAR_AMT_PROMO
FROM TEMP_CD_CHECKQTY_DETAILS_2 CD
LEFT JOIN TEMP_CD_CHECKQTY_CLM_TTL_DETAILS CDQTY
ON CD.STATE = CDQTY.STATE
AND CD.BRANDID = CDQTY.BRANDID
AND CD.DESCRIPTION = CDQTY.DESCRIPTION
AND CD.STARTDATE = CDQTY.STARTDATE
AND CD.ENDDATE = CDQTY.ENDDATE
AND CD.CD_TYPE = CDQTY.CD_TYPE
AND CD.ITEMID = CDQTY.ITEMID
AND CD.MULTIPLIER_NUM = CDQTY.MULTIPLIER_NUM
AND CD.REBATE_ENTITLEMENT_NUM = CDQTY.REBATE_ENTITLEMENT_NUM
AND CD.AGV_SALE_PRICE = CDQTY.AGV_SALE_PRICE
AND CD.AVG_ITEMPRICE_INC = CDQTY.AVG_ITEMPRICE_INC
AND CD.SLS_QTY = CDQTY.SLS_QTY
AND CD.PROMO_QTY = CDQTY.PROMO_QTY)
SELECT
CD.STATE, CD.BRANDID, CD.DESCRIPTION, CD.STARTDATE, CD.ENDDATE, CD.REBATENO,
CD.CD_TYPE, CD.ITEMID, CD.MULTIPLIER_NUM, CD.REBATE_ENTITLEMENT_NUM, SUM(CD.CLM_VAL) AS CLM_VAL,
CD.AGV_SALE_PRICE, CD.AVG_ITEMPRICE_INC, SUM(CD.CLM_QTY) AS CLM_QTY, CD.SLS_QTY,
CD.PH_VAL, CD.PROMO_QTY, CD.CLM_QTY_TTL, CD.VAR_QTY_SLS, CD.VAR_QTY_PROMO, CD.VAR_AMT_SLS, CD.VAR_AMT_PROMO
FROM TEMP_CD_CHECKQTY_FULL CD
GROUP BY
CD.STATE, CD.BRANDID, CD.DESCRIPTION, CD.STARTDATE, CD.ENDDATE, CD.REBATENO,
CD.CD_TYPE, CD.ITEMID, CD.MULTIPLIER_NUM, CD.REBATE_ENTITLEMENT_NUM,
CD.AGV_SALE_PRICE, CD.AVG_ITEMPRICE_INC, CD.SLS_QTY,
CD.PH_VAL, CD.PROMO_QTY, CD.CLM_QTY_TTL, CD.VAR_QTY_SLS, CD.VAR_QTY_PROMO, CD.VAR_AMT_SLS, CD.VAR_AMT_PROMO)
;